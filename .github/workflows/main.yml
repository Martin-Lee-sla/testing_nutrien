name: Run commands on different operating systems
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule: 
    - cron: "0 12 * * *"
env:
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS  }}
  
jobs:
  Run-npm-on-Ubuntu:
    name: Run npm on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm help

  Run-PSScriptAnalyzer-on-Windows:
    name: Run PSScript on Windows
    runs-on: windows-latest
    steps:
      - name: Install CLI
        shell: pwsh
        run: |
          #Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\AzureCLI.msi; Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'; Remove-Item .\AzureCLI.msi
          Write-Output "overall"
      - name: install required module
        shell: pwsh
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          Install-Module Az -Scope CurrentUser -Force -AllowClobber
          Install-Module Az.Communication -Scope CurrentUser -Force -AllowClobber
          #Import-Module Az.Communication 
          Install-Module Az.ResourceGraph -Scope CurrentUser -Force -AllowClobber
          #Import-Module Az.ResourceGraph
      - name: connect to SPN
        shell: pwsh
        run: |
          $User = $env:CLIENT_ID
          $PWord = ConvertTo-SecureString -String ($env:CLIENT_SECRET) -AsPlainText -Force
          $tenant = $env:TENANT_ID
          $Credential = New-Object -TypeName "System.Management.Automation.PSCredential" -ArgumentList $User,$PWord
          Connect-AzAccount -Credential $Credential -Tenant $tenant -ServicePrincipal
          #az login --service-principal -u $User -p $PWord --tenant $tenant
      - name: query
        shell: pwsh
        run: |
          $kqreboot = 'HealthResources
          | where type == "microsoft.resourcehealth/resourceannotations"
          | summarize count() by tostring(properties.reason)'
          $query_count = (Search-AzGraph -Query $kqreboot)
          $query_count
          $query_count_html = $query_count | ConvertTo-Html -Fragment
          $query_count_html
          
          $test = 'HealthResources
                 | where type == "microsoft.resourcehealth/resourceannotations"
                 | project SubscriptionName=name, subscriptionId, resourceGroup, VmName=trim("\"]", substring(split(properties.targetResourceId, "/", 8),2)), properties.occurredTime, properties.annotationName, properties.category, properties.summary, properties.context, properties.reason'

          $detailed = (Search-AzGraph -Query $test | Out-String)
          $detailed

          $Live_Migration = 'HealthResources
          | where type == "microsoft.resourcehealth/resourceannotations"
          | where  properties.reason == "Live Migration"
          | project SubscriptionName=name, subscriptionId, resourceGroup, VmName=trim("\"]", substring(split(properties.targetResourceId, "/", 8),2)), properties.occurredTime, properties.annotationName, properties.category, properties.summary, properties.context, properties.reason'
          $Live_Migration_Query = Search-AzGraph -Query $Live_Migration
          $Live_Migration_Query

          $Failure = 'HealthResources
          | where type == "microsoft.resourcehealth/resourceannotations"
          | where  properties.reason == "Redeploying due to host failure"
          | project SubscriptionName=name, subscriptionId, resourceGroup, VmName=trim("\"]", substring(split(properties.targetResourceId, "/", 8),2)), properties.occurredTime, properties.annotationName, properties.category, properties.summary, properties.context, properties.reason'
          $Failure_Query = Search-AzGraph -Query $Failure
          $Failure_Query

          $detailed = $Failure_Query + $Live_Migration_Query

          $style = "<style>BODY{font:arial 10pt;}</style>"

          #$combined = (write-output $query_count + $Live_Migration_Query + $Failure_Query| ConvertTo-Html -Body $style | Out-String)# + (write-output $Live_Migration_Query | ConvertTo-Html -Body $style | Out-String) + (write-output $Failure_Query | ConvertTo-Html -Body $style | Out-String)
          #$combined
          $combined_html = $Live_Migration_Query + $Failure_Query | ConvertTo-Html -Fragment
          $combined_html

      - name: Send Email
        shell: pwsh
        run: |
          $connection = "endpoint=https://daily-report-demo.communication.azure.com/;accesskey=04LvQxrsosgOWMarfxjDhBt1rHXRGvQ7zBifqMuxiKWOifQh/wuWMrY/G/qCTZd1eeISzhJfybOkYcr3ju//+Q=="
          $sender = "DoNotReply@ad2873a6-3d24-45e2-8e26-5f80ef712436.azurecomm.net"
          $receiver = "martin.lee@nutrien.com"
          $subject = "Welcome to Azure Communication Services Email"
          $text = $combined
          az communication email send --connection-string $connection --sender $sender --subject $subject --to $receiver --html "'$query_count_html'"

          
